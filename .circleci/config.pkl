amends ".../pkl/.circleci/PklCI.pkl"

local swiftTest = new RunStep {
  name = "swift test"
  command = """
    mkdir -p .out/test-results/
    swift test -vv --parallel --num-workers 1 --xunit-output .out/test-results/xunit.xml -Xswiftc -warnings-as-errors
    """
}

main {
  jobs {
    "test"
  }
}

prb {
  jobs {
    "test"
  }
}

release {
  jobs {
    "test"
    new {
      ["pkl-package"] {
        requires {
          "test"
        }
      }
    }
    new {
      ["pkl-gen-swift-macos"] {
        requires {
          "test"
        }
      }
    }
    new {
      ["pkl-gen-swift-linux-amd64"] {
        requires {
          "test"
        }
      }
    }
    new {
      ["pkl-gen-swift-linux-aarch64"] {
        requires {
          "test"
        }
      }
    }
    new {
      ["do-release"] {
        requires {
          "pkl-package"
          "pkl-gen-swift-macos"
          "pkl-gen-swift-linux-amd64"
          "pkl-gen-swift-linux-aarch64"
        }
        context {
          "Pkl release"
        }
      }
    }
  }
}

jobs {
  ["test"] {
    docker {
      new {
        image = "swift:5.9-rhel-ubi9"
      }
    }
    resource_class = "xlarge"
    // TODO(oss) remove me, and download Pkl from CI
    environment {
      ["PKL_EXEC"] = "bin/jpkl"
    }
    steps {
      "checkout"
      // need to use jpkl because of an issue where pkl refuses to exit
      new RunStep { command = "yum install -y java" }
      swiftTest
      new RunStep { command = "make test-snippets" }
      new RunStep { command = "make test-pkl" }
      new RunStep { command = "make generate-fixtures" }
      new StoreTestResults {
        path = ".out/test-results/"
      }
    }
  }

  ["pkl-gen-swift-macos"] {
    macos {
      xcode = "15.2.0"
    }
    steps {
      "checkout"
      new RunStep {
        name = "Build pkl-gen-swift"
        // TODO why isn't this building a universal binary?
        command = """
          make pkl-gen-swift-release
          mkdir -p out/pkl-gen-swift/
          cp .build/x86_64-apple-macosx/release/pkl-gen-swift out/pkl-gen-swift/pkl-gen-swift-macos.bin
          # cp $(make pkl-gen-swift-release-output) out/pkl-gen-swift/pkl-gen-swift-macos.bin
          """
      }
      new PersistToWorkspaceStep { paths { "out/" }; root = "." }
    }
  }

  for (arch in List("aarch64", "amd64")) {
    ["pkl-gen-swift-linux-\(arch)"] {
      docker {
        new {
          image = "swift:5.9-rhel-ubi9"
        }
      }
      resource_class = if (arch == "amd64") "xlarge" else "arm.xlarge"
      steps {
        "checkout"
        new RunStep {
          name = "Build pkl-gen-swift"
          command = """
            make pkl-gen-swift-release
            mkdir -p out/pkl-gen-swift/
            cp $(make pkl-gen-swift-release-output) out/pkl-gen-swift/pkl-gen-swift-linux-\(arch).bin
            """
        }
        new PersistToWorkspaceStep { paths { "out/" }; root = "." }
      }
    }
  }

  ["pkl-package"] {
    docker {
      new { image = "cimg/base:current" }
    }
    steps {
      "checkout"
      // TODO(oss) remove --skip-publish-check and change path to Pkl
      new RunStep {
        command = #"bin/pkl-cli-amd64.bin project package --skip-publish-check --output-path out/pkl-package/ codegen/src/"#
      }
      new PersistToWorkspaceStep {
        paths {
          "out/"
        }
        root = "."
      }
    }
  }

  ["do-release"] {
    docker {
      new { image = "maniator/gh:v2.40.1" }
    }
    // TODO(oss) remove me, and download Pkl from CI
    environment {
      ["PKL_EXEC"] = "bin/pkl-cli-macos-amd64.bin"
    }
    steps {
      "checkout"
      new AttachWorkspaceStep { at = "." }
      new RunStep {
        name = "Do release"
        // language=bash
        command = #"""
          EXPECTED_VERSION=$(cat VERSION.txt)

          if [ "${EXPECTED_VERSION}" != "${CIRCLE_TAG}" ]; then
            echo "Mismatching versions!"
            echo "VERSION.txt has ${EXPECTED_VERSION}"
            echo "Git tag is ${CIRCLE_TAG}"
            echo "Update VERSION.txt to match the tag, and re-tag."
            exit 1
          fi

          echo "Creating release for Pkl package"
          gh release create "pkl.swift@${CIRCLE_TAG}" \
            --title "Pkl package ${CIRCLE_TAG}" \
            --target "${CIRCLE_SHA1}" \
            --notes "This holds the release assets for the pkl.swift Pkl package." \
            --repo "${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}" \
            out/pkl-package/*

          echo "Creating release for Swift library"
          export GH_TOKEN="${GITHUB_TOKEN}"
          gh release create "${CIRCLE_TAG}" \
            --title "pkl-swift ${CIRCLE_TAG}" \
            --target "${CIRCLE_SHA1}" \
            --verify-tag \
            --notes "Release notes: https://pkl-lang.org/swift/CHANGELOG.html#release-${CIRCLE_TAG}" \
            --repo "${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}" \
            out/pkl-gen-swift/*
          """#
      }
    }
  }
}
