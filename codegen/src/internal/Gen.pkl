//===----------------------------------------------------------------------===//
// Copyright Â© 2024-2025 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//

@Unlisted
abstract module pkl.swift.internal.Gen

import "SwiftMapping.pkl"
import "Type.pkl"

/// The generated contents for this particular mapping.
mapping: SwiftMapping

/// All mappings
mappings: List<SwiftMapping>

/// The Swift source code
contents: String

/// Swift source code to be put outside the extension, at the top level
topLevelContents: String?

/// The name of the namespace
namespaceName: String

/// The indentation applied to generated Swift code.
indent: String

function renderInnerHash(type: Type, rpt: Int, name: String, isDictKey: Boolean): String =
  if (type is Type.Array)
    """
    \(module.indent.repeat(rpt))for x in \(name) {
    \(renderInnerHash(type.elem, rpt+1, "x", false))
    \(module.indent.repeat(rpt))}
    """
  else if (type is Type.Dictionary)
    """
    \(module.indent.repeat(rpt))for (k, v) in \(name) {
    \(renderInnerHash(type.key, rpt+1, "k", type.key is Type.Optional))
    \(renderInnerHash(type.elem, rpt+1, "v", false))
    \(module.indent.repeat(rpt))}
    """
  else if (type is Type.Optional && !isDictKey)
    """
    \(module.indent.repeat(rpt))if let \(name)\(if (isDictKey) " = \(name).key" else "") {
    \(renderInnerHash(type.elem, rpt+1, name, false))
    \(module.indent.repeat(rpt))}
    """
  else
    """
    \(module.indent.repeat(rpt))hasher.combine(\(name))
    """
